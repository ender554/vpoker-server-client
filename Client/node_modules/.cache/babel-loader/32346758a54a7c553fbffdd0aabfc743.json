{"ast":null,"code":"var _classCallCheck = require(\"/home/josh/Desktop/Thinkful/projects/pcap/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/josh/Desktop/Thinkful/projects/pcap/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/josh/Desktop/Thinkful/projects/pcap/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/josh/Desktop/Thinkful/projects/pcap/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/josh/Desktop/Thinkful/projects/pcap/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/josh/Desktop/Thinkful/projects/pcap/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _assertThisInitialized = require(\"/home/josh/Desktop/Thinkful/projects/pcap/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _require = require('./card'),\n    Card = _require.Card;\n\nvar _require2 = require('../suits'),\n    none = _require2.none;\n\nvar _require3 = require('../rank'),\n    Rank = _require3.Rank;\n\nvar _require4 = require('../ranks'),\n    joker = _require4.joker;\n\nvar props = new WeakMap();\nvar preferedColor = 'black';\nvar colors = new Set(['black', 'white', 'red']);\n/**\r\n * Sets the prefered joker color to use when creating joker cards. Effects the unicode character\r\n * for the card.\r\n *\r\n * @param color {'red'|'black'|'white'}\r\n * @return void\r\n */\n\nexports.preferedJokerColor = function (color) {\n  if (!colors.has(color)) {\n    throw new Error('Unexpected color for joker; Must be \"black\", \"white\", or \"red\"');\n  }\n\n  preferedColor = color;\n};\n/**\r\n * @class JokerCard\r\n * @extends Card\r\n * @param color {('red'|'black'|'white')?} - Defaults to whatever is set as the prefered color\r\n * @see preferedJokerColor\r\n * @description Special sub-class for representing Joker cards\r\n */\n\n\nvar JokerCard =\n/*#__PURE__*/\nfunction (_Card) {\n  \"use strict\";\n\n  _inherits(JokerCard, _Card);\n\n  function JokerCard() {\n    var _this;\n\n    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : preferedColor;\n\n    _classCallCheck(this, JokerCard);\n\n    if (!colors.has(color)) {\n      throw new Error('Unexpected color for joker; Must be \"black\", \"white\", or \"red\"');\n    }\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JokerCard).call(this, none, joker));\n    props.set(_assertThisInitialized(_assertThisInitialized(_this)), {\n      color: color,\n      rank: null\n    });\n    return _this;\n  }\n  /**\r\n   * Returns a human-readable string representation of the card object\r\n   *\r\n   * eg. `\"<JokerCard color=red>\"`\r\n   *\r\n   * @return {string}\r\n   */\n\n\n  _createClass(JokerCard, [{\n    key: \"toString\",\n    value: function toString() {\n      var _props$get = props.get(this),\n          color = _props$get.color;\n\n      return \"<JokerCard color=\".concat(color, \">\");\n    }\n    /**\r\n     * @type {string|void}\r\n     * @description The unicode character that represents this particular card if one exists\r\n     */\n\n  }, {\n    key: \"unicode\",\n    get: function get() {\n      return _get(_getPrototypeOf(JokerCard.prototype), \"unicode\", this).get(props.get(this).color);\n    } // /** @type {Rank} */\n    // get rank() {\n    // \treturn props.get(this).rank;\n    // }\n    // set rank(rank) {\n    // \tif (rank instanceof Rank) {\n    // \t\tprops.get(this).rank = rank;\n    // \t}\n    // }\n\n  }]);\n\n  return JokerCard;\n}(Card);\n\nexports.JokerCard = JokerCard;","map":null,"metadata":{},"sourceType":"script"}