{"ast":null,"code":"var _toConsumableArray = require(\"/home/josh/Desktop/Thinkful/projects/pcap/Client/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/home/josh/Desktop/Thinkful/projects/pcap/Client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/home/josh/Desktop/Thinkful/projects/pcap/Client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/josh/Desktop/Thinkful/projects/pcap/Client/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/josh/Desktop/Thinkful/projects/pcap/Client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require('../deck'),\n    Deck = _require.Deck;\n\nvar _require2 = require('../card'),\n    Card = _require2.Card,\n    JokerCard = _require2.JokerCard;\n\nvar _require3 = require('../suits'),\n    spades = _require3.spades,\n    hearts = _require3.hearts,\n    diamonds = _require3.diamonds,\n    clubs = _require3.clubs;\n\nvar _require4 = require('../ranks'),\n    ace = _require4.ace,\n    two = _require4.two,\n    three = _require4.three,\n    four = _require4.four,\n    five = _require4.five,\n    six = _require4.six,\n    seven = _require4.seven,\n    eight = _require4.eight,\n    nine = _require4.nine,\n    ten = _require4.ten,\n    jack = _require4.jack,\n    queen = _require4.queen,\n    king = _require4.king;\n/**\r\n * @class StandardDeck\r\n * @extends Deck\r\n * @param options {Object?}\r\n * @param [options.jokers=0] {number|JokerCard[]} - Either a number of jokers to generate, or an array of jokers to add to the deck\r\n */\n\n\nvar StandardDeck =\n/*#__PURE__*/\nfunction (_Deck) {\n  \"use strict\";\n\n  _inherits(StandardDeck, _Deck);\n\n  function StandardDeck() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$jokers = _ref.jokers,\n        jokers = _ref$jokers === void 0 ? 0 : _ref$jokers;\n\n    _classCallCheck(this, StandardDeck);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StandardDeck).call(this, generateDeck(jokers)));\n  }\n\n  return StandardDeck;\n}(Deck);\n\nexports.StandardDeck = StandardDeck;\nvar suits = [spades, hearts, diamonds, clubs];\nvar ranks = [ace, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king];\n\nvar generateDeck = function generateDeck(jokers) {\n  var cards = [];\n  suits.forEach(function (suit) {\n    ranks.forEach(function (rank) {\n      cards.push(new Card(suit, rank));\n    });\n  });\n\n  if (Array.isArray(jokers)) {\n    if (!jokers.every(function (card) {\n      return card instanceof JokerCard;\n    })) {\n      throw new Error('StandardDeck: Only joker cards may be provided in the jokers parameter');\n    }\n\n    cards.push.apply(cards, _toConsumableArray(jokers));\n  } else {\n    for (var i = 0; i < jokers; i++) {\n      cards.push(new JokerCard());\n    }\n  }\n\n  return cards;\n};","map":null,"metadata":{},"sourceType":"script"}